trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  pipDownloadDir: $(Pipeline.Workspace)/.pip

stages:
  - stage: build
    displayName: Build
    jobs:
      - job: build
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: 3.12
            displayName: Use Python 3.12

          - task: Cache@2
            inputs:
              key: 'pip | "$(Agent.OS)" | requirements.txt'
              restoreKeys: |
                pip | "$(Agent.OS)"
              path:
              cacheHitVar: cacheRestored
            displayName: Cache pip

          - script: |
              pip download -r requirements.txt --dest=$(pipDownloadDir)
            displayName: Download requirements
            condition: eq(variables.cacheRestored, 'false')

          - script: |
              pip install -r requirements.txt --no-index --find-links=$(pipDownloadDir)
            displayName: Install requirements

          - task: ArchiveFiles@2
            displayName: Archive files
            inputs:
              rootFolderOrFile: $(System.DefaultWorkingDirectory)
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-$(python.version).zip
              replaceExistingArchive: true

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: $(Build.ArtifactStagingDirectory)
              ArtifactName: pythonarchive

          - script: |
              pip install pytest pytest-azurepipelines
              pytest -v --junitxml=junit/test-results.xml --cov-report=xml --cov=src
            displayName: pytest

          - task: PublishCodeCoverageResults@2
            displayName: Publish Cobertura Coverage Report
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: $(System.DefaultWorkingDirectory)/**/coverage.xml
              reportDirectory: $(System.DefaultWorkingDirectory)/**/htmlcov