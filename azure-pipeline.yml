trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  pipDownloadDir: $(Pipeline.Workspace)/.pip
  pipInstallDir: /home/vsts/.cache/pip

stages:
  - stage: build
    displayName: Build
    jobs:
      - job: build
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: 3.12
            displayName: Use Python 3.12

          - task: Cache@2
            inputs:
              key: 'pip downloads | "$(Agent.OS)" | requirements.txt'
              restoreKeys: |
                pip downloads | "$(Agent.OS)"
              path: $(pipDownloadDir)
              cacheHitVar: downloadCacheRestored
            displayName: Cache pip downloads

          - task: Cache@2
            inputs:
              key: 'pip installs | "$(Agent.OS)" | requirements.txt'
              restoreKeys: |
                pip install | "$(Agent.OS)"
              path: $(pipInstallDir)
              cacheHitVar: installCacheRestored
            displayName: Cache pip installs

          - script: |
              pip download -r requirements.txt --dest=$(pipDownloadDir)
            displayName: Download requirements
            condition: eq(variables.downloadCacheRestored, 'false')

          - script: |
              pip install -r requirements.txt --no-index --find-links=$(pipDownloadDir)
            displayName: Install requirements
            condition: eq(variables.installCacheRestored, 'false')

          - script: |
              echo "pip list -v == $(pip list -v)"
              echo "pip cache dir == $(pip cache dir)"
              ls -al $(pipDownloadDir)
              echo "python version == $(python --version)"
            displayName: Locations

          - task: ArchiveFiles@2
            displayName: Archive files
            inputs:
              rootFolderOrFile: $(System.DefaultWorkingDirectory)
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-$(python.version).zip
              replaceExistingArchive: true

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: $(Build.ArtifactStagingDirectory)
              ArtifactName: pythonarchive

          - script: |
              pip install pytest pytest-azurepipelines
              pytest -v --junitxml=junit/test-results.xml --cov-report=xml --cov=src
            displayName: pytest

          - task: PublishCodeCoverageResults@2
            displayName: Publish Cobertura Coverage Report
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: $(System.DefaultWorkingDirectory)/**/coverage.xml
              reportDirectory: $(System.DefaultWorkingDirectory)/**/htmlcov